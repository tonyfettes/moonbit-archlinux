on:
  push:
    branches:
      - main
  schedule:
    - cron: '00 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Bundle MoonBit core
        uses: ./.github/actions/bundle

      - name: Commit version change
        id: commit
        run: |
          tag="v$(cat version)"
          echo "Updating version to $remote_version"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add version
          if [ -n "$(git status --porcelain)" ]; then
            git commit -a -m "update version"
            git push origin HEAD:main
            git tag "$tag"
            git push origin "$tag"
            echo "TAG=$tag" >> "$GITHUB_OUTPUT"
          else
            echo "TAG=x" >> "$GITHUB_OUTPUT"
          fi

      - name: Release
        if: ${{ steps.commit.outputs.TAG != 'x' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'core.zip'
          tag: ${{ steps.commit.outputs.TAG }}

      - name: Update PKGBUILD
        uses: ./.github/actions/update

      - name: Publish AUR
        uses: KSXGitHub/github-actions-deploy-aur@v2.7.1
        with:
          pkgname: moonbit-bin
          pkgbuild: ./PKGBUILD
          commit_username: ${{ github.repository_owner }}
          commit_email: ${{ github.repository_owner }}@users.noreply.github.com
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          commit_message: update
          allow_empty_commits: false

      - name: Commit to git
        run: |
          git add PKGBUILD
          if [ -n "$(git status --porcelain)" ]; then
            git commit -a -m "update PKGBUILD"
            git push origin HEAD:main
          fi
